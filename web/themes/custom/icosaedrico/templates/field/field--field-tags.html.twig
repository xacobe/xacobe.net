{#
/**
 * @file
 * Theme override for a field.
 *
 * To override output, copy the "field.html.twig" from the templates directory
 * to your theme's directory and customize it, just like customizing other
 * Drupal templates such as page.html.twig or node.html.twig.
 *
 * Instead of overriding the theming for all fields, you can also just override
 * theming for a subset of fields using
 * @link themeable Theme hook suggestions. @endlink For example,
 * here are some theme hook suggestions that can be used for a field_foo field
 * on an article node type:
 * - field--node--field-foo--article.html.twig
 * - field--node--field-foo.html.twig
 * - field--node--article.html.twig
 * - field--field-foo.html.twig
 * - field--text-with-summary.html.twig
 * - field.html.twig
 *
 * Available variables:
 * - attributes: HTML attributes for the containing element.
 * - label_hidden: Whether to show the field label or not.
 * - title_attributes: HTML attributes for the title.
 * - label: The label for the field.
 * - multiple: TRUE if a field can contain multiple items.
 * - items: List of all the field items. Each item contains:
 *   - attributes: List of HTML attributes for each item.
 *   - content: The field item's content.
 * - entity_type: The entity type to which the field belongs.
 * - field_name: The name of the field.
 * - field_type: The type of the field.
 * - label_display: The display settings for the label.
 *
 * @see template_preprocess_field()
 */
#}
{%
  set title_classes = [
    label_display == 'visually_hidden' ? 'visually-hidden',
  ]
%}

{% if label_hidden %}
  {% if multiple %}
    <div{{ attributes.addClass("flex max-w-prose mx-auto justify-end items-center") }}>
      {% for item in items %}
      {{ include('icosaedrico:badge', { badge_text: item.content["#title"], badge_href: item.content["#url"], badge_color: 'neutral' }) }}
    {% endfor %}
    </div>
  {% else %}
   {% for item in items %}
      {{ include('icosaedrico:badge', { badge_text: item.content["#title"], badge_href: item.content["#url"], badge_color: 'neutral' }) }}
    {% endfor %}
  {% endif %}
{% else %}
  <div{{ attributes.addClass("flex max-w-prose mx-auto justify-end") }}>
    <div{{ title_attributes.addClass(title_classes, "flex items-center text-sm me-3") }}>
    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-tag-fill" viewBox="0 0 16 16">
      <path d="M2 1a1 1 0 0 0-1 1v4.586a1 1 0 0 0 .293.707l7 7a1 1 0 0 0 1.414 0l4.586-4.586a1 1 0 0 0 0-1.414l-7-7A1 1 0 0 0 6.586 1zm4 3.5a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0"/>
    </svg>
    <span>{{ label }}:</span>
  </div>
    {% if multiple %}
      <div>
    {% endif %}
    {% for item in items %}
      {{ include('icosaedrico:badge', { badge_text: item.content["#title"], badge_href: item.content["#url"], badge_color: 'neutral' }) }}
    {% endfor %}
    {% if multiple %}
      </div>
    {% endif %}
  </div>
{% endif %}
